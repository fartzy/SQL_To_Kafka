kafka {
  app.name = "ServiceCategories"
  connection {
    zk.quorum = "cilhdkfd0304.sys.acme.com:2181,cilhdkfd0305.sys.acme.com:2181,cilhdkfd0306.sys.acme.com:2181"
    bootstrap.servers = "cilhdkfs0301.sys.acme.com:9095,cilhdkfs0302.sys.acme.com:9095,cilhdkfs0303.sys.acme.com:9095"
    consumer.group = ""
    security.protocol.config = "PLAINTEXT"
  }
  writer {
    producer {
      bootstrap.servers = ${kafka.connection.zk.quorum}
      key.serializer = "org.apache.kafka.common.serialization.StringSerializer",
      value.serializer = "org.apache.kafka.common.serialization.ByteArraySerializer"
    }
  }
  reader {
    consumer {
      bootstrap.servers = ${kafka.connection.zk.quorum}
      acks = "all"
      key.deserializer = "org.apache.kafka.common.serialization.StringDeserializer"
      value.deserializer = "org.apache.kafka.common.serialization.ByteArrayDeserializer"
    }
    pollTimeout = 100
  }
  streaming {
    num.stream.threads = "5"
    auto.offset.reset = "earliest"
    local.state.dir.location = "/opt/skyline/kafka-streams"
  }
}
